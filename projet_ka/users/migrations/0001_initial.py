# Generated by Django 2.1.5 on 2019-11-22 11:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('last_name', models.CharField(max_length=30, verbose_name='nom')),
                ('first_name', models.CharField(max_length=30, verbose_name='prénom')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name="date d'enregistrement")),
                ('is_active', models.BooleanField(default=True, verbose_name='profile actif')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
            },
            managers=[
                ('objects', users.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=30, verbose_name='prénom')),
                ('societe', models.CharField(blank=True, max_length=30, null=True, verbose_name="nom de l'entreprise")),
                ('phone', models.PositiveIntegerField(verbose_name='téléphone')),
                ('numetvoie', models.CharField(max_length=50, verbose_name='numéro et nom de la rue')),
                ('post_code', models.PositiveIntegerField(verbose_name='code postal')),
                ('city', models.CharField(max_length=30, verbose_name='ville')),
                ('other_info', models.CharField(blank=True, max_length=50, null=True, verbose_name='informations complémentaires')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', related_query_name='address', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name="date d'anniversaire")),
                ('newsletter', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
